{{- if and .Values.global.mongodb.deployInCluster (default false .Values.mongodb.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - containerPort: 27017
              name: mongodb
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          {{- if .Values.mongodb.volumePath }}
          hostPath:
            path: {{ .Values.mongodb.volumePath }}
            type: DirectoryOrCreate
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}
---
{{- if and .Values.global.mongodb.deployInCluster (default false .Values.mongodb.enabled) }}
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongodb
  selector:
    app: mongodb
{{- end }}
---
{{- if and .Values.global.mongodb.deployInCluster (default false .Values.mongodb.enabled) (hasKey .Values.mongodb "persistence") (default false .Values.mongodb.persistence.enabled) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  {{- if and (hasKey .Values.mongodb.persistence "storageClass") .Values.mongodb.persistence.storageClass }}
  storageClassName: {{ .Values.mongodb.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ default "10Gi" .Values.mongodb.persistence.size }}
{{- end }}
