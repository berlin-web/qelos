image: node:16

build-monorepo:
  stage: build
  artifacts:
    paths:
      - node_modules/
      - apps/
      - packages/
  cache:
    paths:
      - node_modules/
  script:
    - npm install
    - npm run build
    - npm run test
    - node tools/bundle-dependencies-polyfix admin
    - npm run pack-package --- --scope=@qelos/admin
    - npm run rename-pack --- --scope=@qelos/admin
    - node tools/bundle-dependencies-polyfix auth
    - npm run pack-package --- --scope=@qelos/auth
    - npm run rename-pack --- --scope=@qelos/auth
    - node tools/bundle-dependencies-polyfix assets
    - npm run pack-package --- --scope=@qelos/assets
    - npm run rename-pack --- --scope=@qelos/assets

# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build-admin:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - service="admin"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - cd apps/${service}
    - docker build --pull -t "$CI_REGISTRY/qelos/qelos/${service}${tag}" .
    - docker push "$CI_REGISTRY/qelos/qelos/${service}${tag}"


docker-build-auth:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - service="auth"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - cd apps/${service}
    - docker build --pull -t "$CI_REGISTRY/qelos/qelos/${service}${tag}" .
    - docker push "$CI_REGISTRY/qelos/qelos/${service}${tag}"


docker-build-assets:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - service="assets"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - cd apps/${service}
    - docker build --pull -t "$CI_REGISTRY/qelos/qelos/${service}${tag}" .
    - docker push "$CI_REGISTRY/qelos/qelos/${service}${tag}"